//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import com.jcraft.jsch.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.ArrayList;
import javax.swing.*;

public class GUI extends JPanel {
    private JButton jcomp1;
    private JButton jcomp2;
    private JTextField jcomp3;
    private JTextField jcomp4;
    private JLabel jcomp5;
    private JLabel jcomp6;
    private JComboBox jcomp7;

    public GUI() {
        //construct preComponents
        String[] jcomp7Items = {"01-02-2016","02-02-2016","03-02-2016","04-02-2016","05-02-2016","06-02-2016","07-02-2016","08-02-2016","09-02-2016","10-02-2016",
                "11-02-2016","12-02-2016","13-02-2016","14-02-2016","15-02-2016","16-02-2016","17-02-2016","18-02-2016","19-02-2016","20-02-2016",
                "21-02-2016","22-02-2016","23-02-2016","24-02-2016","25-02-2016","26-02-2016","27-02-2016","28-02-2016","29-02-2016","30-02-2016",
                "01-03-2016","02-03-2016","03-03-2016","04-03-2016","05-03-2016","06-03-2016","07-03-2016","08-03-2016","09-03-2016","10-03-2016",
                "11-03-2016","12-03-2016","13-03-2016","14-03-2016","15-03-2016","16-03-2016","17-03-2016","18-03-2016","19-03-2016","20-03-2016",
                "21-03-2016","22-03-2016","23-03-2016","24-03-2016","25-03-2016","26-03-2016","27-03-2016","28-03-2016","29-03-2016","30-03-2016",
                "01-04-2016","02-04-2016","03-04-2016","04-04-2016","05-04-2016","06-04-2016","07-04-2016","08-04-2016","09-04-2016","10-04-2016",
                "11-04-2016","12-04-2016","13-04-2016","14-04-2016","15-04-2016","16-04-2016","17-04-2016","18-04-2016","19-04-2016","20-04-2016",
                "21-04-2016","22-04-2016","23-04-2016","24-04-2016","25-04-2016","26-04-2016","27-04-2016","28-04-2016","29-04-2016"
          };


        //construct components
        jcomp1 = new JButton ("Clear ");
        jcomp2 = new JButton ("Predict");
        jcomp3 = new JTextField (5);
        jcomp4 = new JTextField (5);
        jcomp5 = new JLabel ("Real Value :");
        jcomp6 = new JLabel ("Prediction :");
        jcomp7 = new JComboBox (jcomp7Items);

        jcomp1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jcomp3.setText("");
                jcomp4.setText("");
            }
        });

        jcomp2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int index = jcomp7.getSelectedIndex();

                BufferedReader br = null;
                try {
                    if (connect()) {
                        br = new BufferedReader(new FileReader("predict.txt"));

                        String temp = "1";
                        temp = br.readLine();

                        for(int i = 1 ; i <= index ; i++) {
                            if (i == index)
                                temp = br.readLine();
                            else
                                br.readLine();
                        }
                        String line[] = temp.split(",");



                        jcomp3.setText(line[1]);
                        jcomp4.setText(line[0]);
                    }
                } catch (FileNotFoundException e1) {
                    e1.printStackTrace();
                } catch (IOException e1) {
                    e1.printStackTrace();
                }


            }
        });





        //adjust size and set layout
        setPreferredSize (new Dimension (429, 427));
        setLayout (null);

        //add components
        add (jcomp1);
        add (jcomp2);
        add (jcomp3);
        add (jcomp4);
        add (jcomp5);
        add (jcomp6);
        add (jcomp7);

        //set component bounds (only needed by Absolute Positioning)
        jcomp1.setBounds (100, 300, 100, 25);
        jcomp2.setBounds (235, 300, 100, 25);
        jcomp3.setBounds (215, 160, 100, 25);
        jcomp4.setBounds (215, 100, 100, 25);
        jcomp5.setBounds (125, 100, 100, 25);
        jcomp6.setBounds (125, 160, 100, 25);
        jcomp7.setBounds (145, 220, 135, 50);

        jcomp1.setActionCommand("clear");
        jcomp2.setActionCommand("predict");





    }


    public boolean connect() {
        String SFTPHOST = "127.0.0.1";
        int SFTPPORT = 2222;
        String SFTPUSER = "root";
        String SFTPPASS = "burak123";
        String SFTPWORKINGDIR = "/root/myPredict/";

        Session session = null;
        Channel channel = null;
        ChannelSftp channelSftp = null;
        try {
            JSch jsch = new JSch();
            session = jsch.getSession(SFTPUSER, SFTPHOST, SFTPPORT);
            session.setPassword(SFTPPASS);
            java.util.Properties config = new java.util.Properties();
            config.put("StrictHostKeyChecking", "no");
            session.setConfig(config);
            session.connect();
            channel = session.openChannel("sftp");
            channel.connect();
            channelSftp = (ChannelSftp) channel;
            channelSftp.cd(SFTPWORKINGDIR);
            byte[] buffer = new byte[1024];
            BufferedInputStream bis = new BufferedInputStream(channelSftp.get("part-00000"));
            File newFile = new File("E:/git/ArayÃ¼z/predict.txt");
            OutputStream os = new FileOutputStream(newFile);
            BufferedOutputStream bos = new BufferedOutputStream(os);
            int readCount;
            while ((readCount = bis.read(buffer)) > 0) {
                System.out.println("Writing: ");
                bos.write(buffer, 0, readCount);
            }
            bis.close();
            bos.close();
            return true;
        } catch (JSchException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (SftpException e) {
            e.printStackTrace();
        }
        return false;
    }



    public static void main (String[] args) {
        JFrame frame = new JFrame ("code of gui");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add (new GUI());
        frame.pack();
        frame.setVisible (true);
    }
}
